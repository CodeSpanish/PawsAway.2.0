const fs=require("fs"),path=require("path"),sharp=require("sharp"),[sourceDir,outputDir,thumbnail_width,thumbnail_height]=process.argv.slice(2);sourceDir&&outputDir&&thumbnail_width&&thumbnail_height||(console.error("Usage: node process_images.js <sourceDir> <outputDir> <thumbnail_width> <thumbnail_height>"),process.exit(1));const width=parseInt(thumbnail_width,10),height=parseInt(thumbnail_height,10);(isNaN(height)||isNaN(width))&&(console.error("Thumbnail size must be a valid number."),process.exit(1)),fs.existsSync(outputDir)||fs.mkdirSync(outputDir,{recursive:!0}),fs.readdir(sourceDir,((err,files)=>{err&&(console.error("Error reading source directory:",err),process.exit(1)),console.log(`Processing width:${width} height:${height}`),files.forEach((file=>{const inputPath=path.join(sourceDir,file),outputPath=path.join(outputDir,`thumb-${file}`);/\.(jpe?g|png|webp|tiff|gif)$/i.test(file)&&sharp(inputPath).resize(width,height).toFile(outputPath).then((()=>console.log(`Processed: ${file}`))).catch((err=>console.error(`Error processing ${file}:`,err)))}))}));